Name: Abdulbasid Guled
Student Number: 156024184
Student Email: aguled5@myseneca.ca
Due Date: 18/09/2020
Section: NAA


1. The reason why the button appears on the desktop instead of as a child of another widget has to do with the constructor for the push button as well as how it's defined.
The first parameter defines what appears on the button itself, which for this lab, was "Hello BTH545". The second parameter defines the location of the push button itself.
By default, it's defined to be nullptr which points to the parent widget which is the desktop by default. This is because every widget requires a parent widget to latch onto.
The nullptr specifies that the button does not have a parent widget to latch onto and thus, it becomes the root window. 

2. Calling the .show() method on the push button will cause the button to appear when the application is ran. The only way for the button to appear on the screen is to call 
the functiuon. I believe that the API was designed this way to allow an easy way to show the button for most programmers without needing to rely on knowing exactly how the show 
method actually operates. In terms of easy of use, it satisfies the job very well. That's the way I feel personally about the design choice of the API.

3. The relationship between the push button and the application is that of a composition relationship in that the push button, which inherits from widget, relies on an application 
running. QApplication is a friend of QWidget and because of this, the exec() function that's called at the end is able to get the status code from the QApplication class. 